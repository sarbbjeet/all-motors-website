// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model VehicleGallary{
   id String @id @default(uuid())
   image String
}

model UsedCar{
  id String @id @default(uuid())
  make String
  model String
  detail String?
  year Int
  color String
  engine_size String
  transmission String
  mileage Int
  doors Int @default(4)
  fuel String
  image String?
  price Int 
  fprice Int?
  body_style String
}



// vehicle databases

model Initial {
 id String @id @default(uuid())
  image String?
  make String
  title String? @default("")
  model String
  color String
  engine_size String
  transmission String
  registration String
  previous_owners Int 
  description String? @default("") @db.VarChar(4000)

  //relational models 
  features Features?
  business Business?
  imageGallery ImageGallery[]
}

model Features {
  id String @id @default(uuid())
  vehicle_type String @default("car")
  body_style String
  mileage Int? @default(-1)
 // numberOfCylinders Int? @default(-1)
  fuel String
  yearOfModel Int
  doors Int
  //steering String
  //default VarChar(191) for mysql 
  features String? @default("") @db.VarChar(4000)

  vehicleId String @unique
  vehicle Initial @relation(fields: [vehicleId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Business {
  id String @id @default(uuid())
  price Int? @default(-1)
  finance_month Int? @default(-1)
  insurance_group Int? @default(-1)
  months12_tax Int? @default(-1)
  months6_tax Int? @default(-1)

  vehicleId String @unique
  vehicle Initial @relation(fields: [vehicleId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model ImageGallery{
  id String @id @default(uuid())
  image String
  vehicleId String
  vehicle Initial @relation(fields: [vehicleId ], references:[id],onDelete: Cascade, onUpdate: Cascade)
}

model User {
id String @id @default(uuid())
name String? 
email String @unique
role Role @default(USER) 
password String
verified Boolean @default(false) 
created_at DateTime @default(now())
}

model CustomerQuery {
id String @id @default(uuid())
name String 
email String 
phone String? @default("") 
message String? @default("") @db.VarChar(4000)
type String
created_at DateTime @default(now())  
}

enum Role {
  USER
  ADMIN
}